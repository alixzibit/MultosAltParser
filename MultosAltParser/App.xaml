<Application x:Class="MultosAltParser.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:sys="clr-namespace:System.Windows;assembly=PresentationFramework"
             xmlns:local="clr-namespace:MultosAltParser" 
             xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
             StartupUri="MainWindow.xaml">
    <!-- App.xaml with Qt Fusion Dark theme customization-->
    <Application.Resources>
        <ResourceDictionary>
            <!-- Colors similar to Qt Fusion Dark -->
            <Color x:Key="BackgroundColor">#353535</Color>
            <Color x:Key="DarkBackgroundColor">#2D2D2D</Color>
            <Color x:Key="LightBackgroundColor">#383838</Color>
            <Color x:Key="BorderColor">#2D2D2D</Color>
            <Color x:Key="TextColor">#FFFFFF</Color>
            <Color x:Key="HighlightColor">#3DAEE9</Color>

            <!-- Brushes -->
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
            <SolidColorBrush x:Key="DarkBackgroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
            <SolidColorBrush x:Key="LightBackgroundBrush" Color="{StaticResource LightBackgroundColor}"/>
            <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
            <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
            <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}"/>
            <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
                <!-- Define the template for the ComboBoxToggleButton here -->
            </ControlTemplate>
            <!-- Font Sizes - Note the system namespace usage -->
            <system:Double x:Key="DefaultFontSize">12</system:Double>
            <system:Double x:Key="SmallFontSize">11</system:Double>
            <system:Double x:Key="LargeFontSize">14</system:Double>
            <system:Double x:Key="HeaderFontSize">16</system:Double>

            <!-- Font Family -->
            <FontFamily x:Key="DefaultFontFamily">Segoe UI</FontFamily>

            <!-- ComboBox Style -->
            <Style TargetType="ComboBox">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                                        <ContentPresenter IsHitTestVisible="False" 
                                                    Content="{TemplateBinding SelectionBoxItem}"
                                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                    Margin="{TemplateBinding Padding}"/>
                                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" 
                                           Placement="Bottom">
                                            <Border Background="{StaticResource DarkBackgroundBrush}"
                                                BorderBrush="{StaticResource BorderBrush}"
                                                BorderThickness="1">
                                                <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                    <ItemsPresenter/>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- TabControl Style -->
            <Style TargetType="TabControl">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <!--<Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
                <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"/>-->
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel Grid.Row="0"
                          Panel.ZIndex="1"
                          IsItemsHost="True"
                          Background="Transparent"/>
                                <Border Grid.Row="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter ContentSource="SelectedContent"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--<Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel Grid.Row="0" 
                             Panel.ZIndex="1" 
                             IsItemsHost="True" 
                             Background="Transparent"/>
                                <Border Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter ContentSource="SelectedContent"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <!-- TabItem Style -->
            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="Border"
                        Background="{StaticResource LightBackgroundBrush}"
                        BorderBrush="{StaticResource BorderBrush}"

                        BorderThickness="1,1,1,0"
                        Margin="0,0,1,0">
                                <ContentPresenter x:Name="ContentSite"
                                    ContentSource="Header"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="8,4"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Selected state -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBrush}"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{StaticResource TextBrush}"/>
                                </Trigger>
                                <!-- Unselected state -->
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBackgroundBrush}"/>
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{StaticResource TextBrush}"/>
                                </Trigger>
                                <!-- Mouse over state -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrush}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Optional: Style for content inside TabItem -->
            <Style TargetType="TabItem" x:Key="TabItemContentStyle">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="Padding" Value="8"/>
            </Style>
            <!-- TextBlock Style -->
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            </Style>
            <!-- TextBox Style -->
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="8,4"/>
            </Style>


            <!-- DataGrid Style -->
            <Style TargetType="DataGrid">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="RowBackground" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="AlternatingRowBackground" Value="{StaticResource BackgroundBrush}"/>
                <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
            </Style>

            <!-- DataGrid Column Header Style -->
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0,0,1,1"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

            <!-- DataGrid Cell Style -->
            <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="8,4"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource HighlightBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Button Style -->
            <!-- Regular Button Style -->
            <Style TargetType="Button" x:Key="DefaultButtonStyle">
                <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource HighlightBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Button Style (green) -->
            <Style TargetType="Button" x:Key="DarkGreenButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}">
                <Setter Property="Background" Value="DarkGreen"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#006400"/>
                                    <!-- Slightly lighter green -->
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="DarkOliveGreen"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Button Style (blue) -->
            <Style TargetType="Button" x:Key="DarkSlateBlueButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}">
                <Setter Property="Background" Value="DarkSlateBlue"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#483D8B"/>
                                    <!-- Slightly lighter slate blue -->
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#2E2C5E"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




            <!-- Default style that references the DefaultButtonStyle -->
            <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}"/>


            <!-- MessageBox Window Style -->
            <Style x:Key="MessageBoxWindowStyle" TargetType="Window">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="Crimson"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="ResizeMode" Value="NoResize"/>
                <Setter Property="ShowInTaskbar" Value="False"/>
                <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                <Setter Property="MinWidth" Value="300"/>
                <Setter Property="MinHeight" Value="150"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Window">
                            <Border BorderBrush="Crimson" 
                                    BorderThickness="2"
                                    Background="{StaticResource DarkBackgroundBrush}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="36"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <!-- Title Bar -->
                                    <Grid Grid.Row="0" Background="{StaticResource LightBackgroundBrush}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="46"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Title -->
                                        <TextBlock Grid.Column="0"
                                                   Text="{TemplateBinding Title}"
                                                   Foreground="{StaticResource TextBrush}"
                                                   VerticalAlignment="Center"
                                                   Margin="11,0,0,0"/>

                                        <!-- Close Button -->
                                        <Button x:Name="PART_CloseButton"
                                                Grid.Column="1"
                                                Style="{StaticResource DefaultButtonStyle}"
                                                Content="&#xE106;"
                                                FontFamily="Segoe MDL2 Assets"/>
                                    </Grid>

                                    <!-- Content -->
                                    <ContentPresenter Grid.Row="1" Margin="20"/>

                                    <!-- Buttons Panel -->
                                    <Border Grid.Row="2" 
                                            Background="{StaticResource DarkBackgroundBrush}"
                                            BorderBrush="{StaticResource BorderBrush}"
                                            BorderThickness="0,1,0,0">
                                        <StackPanel x:Name="ButtonPanel" 
                                                    Orientation="Horizontal" 
                                                    HorizontalAlignment="Right"
                                                    Margin="20,10"/>
                                    </Border>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- ScrollBar Brushes -->
            <SolidColorBrush x:Key="ScrollBarThumbBrush" Color="#686868"/>
            <SolidColorBrush x:Key="ScrollBarThumbHoverBrush" Color="#7A7A7A"/>
            <SolidColorBrush x:Key="ScrollBarThumbPressedBrush" Color="#909090"/>
            <SolidColorBrush x:Key="ScrollBarBackgroundBrush" Color="#2A2A2A"/>

            <!-- ScrollBar Button Style -->
            <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ScrollBar Thumb Style -->
            <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="Border"
                        Background="{StaticResource ScrollBarThumbBrush}"
                        CornerRadius="0"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource ScrollBarThumbHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource ScrollBarThumbPressedBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ScrollBar Style -->
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="{StaticResource ScrollBarBackgroundBrush}"/>
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Width" Value="12"/>
                <Setter Property="MinWidth" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" 
                      SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsDirectionReversed="true">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarButtonStyle}"
                                        Command="{x:Static ScrollBar.PageUpCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarButtonStyle}"
                                        Command="{x:Static ScrollBar.PageDownCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter Property="Height" Value="12"/>
                                    <Setter Property="MinHeight" Value="12"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="False"/>
                                    <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ScrollBar Thumb Style -->
            <!--<Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="Border"
                        Background="{StaticResource ScrollBarThumbBrush}"
                        CornerRadius="0"
                        Margin="1"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource ScrollBarThumbHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource ScrollBarThumbPressedBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <!-- ScrollViewer Style -->
            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Content -->
                                <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                                <!-- Vertical ScrollBar -->
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                             Grid.Column="1" Grid.Row="0"
                             Value="{TemplateBinding VerticalOffset}"
                             Maximum="{TemplateBinding ScrollableHeight}"
                             ViewportSize="{TemplateBinding ViewportHeight}"
                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                <!-- Horizontal ScrollBar -->
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                             Grid.Column="0" Grid.Row="1"
                             Orientation="Horizontal"
                             Value="{TemplateBinding HorizontalOffset}"
                             Maximum="{TemplateBinding ScrollableWidth}"
                             ViewportSize="{TemplateBinding ViewportWidth}"
                             Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




            <!-- Window Style -->
            <Style TargetType="Window">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"/>
                <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="shell:WindowChrome.WindowChrome">
                    <Setter.Value>
                        <shell:WindowChrome 
            CaptionHeight="32"
            ResizeBorderThickness="5"
            CornerRadius="0"
            GlassFrameThickness="0"
            UseAeroCaptionButtons="False"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Window">
                            <Border BorderBrush="{StaticResource BorderBrush}" 
                        BorderThickness="1"
                        Background="{StaticResource DarkBackgroundBrush}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="32"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- Title Bar -->
                                    <Grid Grid.Row="0" Background="{StaticResource LightBackgroundBrush}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="46"/>
                                            <ColumnDefinition Width="46"/>
                                            <ColumnDefinition Width="46"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Window Icon -->
                                        <Image Grid.Column="0"
                                   Source="{TemplateBinding Icon}"
                                   Width="16" Height="16"
                                   Margin="8,0,4,0"
                                   VerticalAlignment="Center"/>

                                        <!-- Window Title -->
                                        <TextBlock Grid.Column="1"
                                      Text="{TemplateBinding Title}"
                                      Foreground="{StaticResource TextBrush}"
                                      VerticalAlignment="Center"
                                      Margin="4,0,0,0"/>

                                        <!-- Window Buttons -->
                                        <Button x:Name="PART_MinimizeButton"
                                        Grid.Column="2"
                                        Style="{StaticResource WindowButtonStyle}"
                                        Content="&#xE949;"
                                        Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                                        FontFamily="Segoe MDL2 Assets"/>

                                                                        <Button x:Name="PART_MaximizeButton"
                                        Grid.Column="3"
                                        Style="{StaticResource WindowButtonStyle}"
                                        Content="&#xE739;"
                                        Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                                        FontFamily="Segoe MDL2 Assets"/>

                                                                    <Button x:Name="PART_CloseButton"
                                        Grid.Column="4"
                                        Style="{StaticResource CloseButtonStyle}"
                                        Content="&#xE106;"
                                        Command="{x:Static SystemCommands.CloseWindowCommand}"
                                        FontFamily="Segoe MDL2 Assets"/>    
                                    </Grid>

                                    <!-- Content -->
                                    <ContentPresenter Grid.Row="1"/>

                                    <!-- Resize Grip -->
                                    <ResizeGrip x:Name="WindowResizeGrip" 
                                   Grid.Row="1"
                                   HorizontalAlignment="Right" 
                                   VerticalAlignment="Bottom" 
                                   Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="WindowState" Value="Maximized">
                                    <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="PART_MaximizeButton" Property="Content" Value="&#xE923;"/>
                                </Trigger>
                                <Trigger Property="WindowState" Value="Normal">
                                    <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PART_MaximizeButton" Property="Content" Value="&#xE739;"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Window Button Style (separate from regular buttons) -->
            <Style x:Key="WindowButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="46"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="Transparent">
                                <Border x:Name="ButtonBorder" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter x:Name="ButtonContent"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Content}"
                                        TextElement.Foreground="{TemplateBinding Foreground}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource HighlightBrush}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Close Button Style -->
            <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#E81123"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#8B0911"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


        </ResourceDictionary>
    </Application.Resources>
</Application>
